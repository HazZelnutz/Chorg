//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Chorg.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Chorg.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO AIRPORTS VALUES (NULL, ?, ?).
        /// </summary>
        internal static string sql_addAirport {
            get {
                return ResourceManager.GetString("sql_addAirport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO CHARTS VALUES (NULL, @airport, @page, @identifier, @description, @content, @pdf, @keywords).
        /// </summary>
        internal static string sql_addChart {
            get {
                return ResourceManager.GetString("sql_addChart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE &quot;AIRPORTS&quot; (
        ///	&quot;ID&quot;	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        ///	&quot;ICAO&quot;	TEXT NOT NULL UNIQUE,
        ///	&quot;Name&quot;	TEXT
        ///);
        ///
        ///CREATE TABLE &quot;CHARTS&quot; (
        ///	&quot;ID&quot;	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        ///	&quot;Airport&quot;	INTEGER NOT NULL,
        ///	&quot;Page&quot;	INTEGER NOT NULL,
        ///	&quot;Identifier&quot;	TEXT,
        ///	&quot;Description&quot;	TEXT,
        ///	&quot;Content&quot;	TEXT NOT NULL,
        ///	&quot;PDF&quot;	BLOB NOT NULL,
        ///&quot;Keywords&quot; TEXT,
        ///	FOREIGN KEY(&quot;Airport&quot;) REFERENCES &quot;AIRPORTS&quot;(&quot;ID&quot;) ON DELETE CASCADE
        ///);.
        /// </summary>
        internal static string sql_createDB {
            get {
                return ResourceManager.GetString("sql_createDB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM AIRPORTS WHERE ICAO = ?.
        /// </summary>
        internal static string sql_deleteAirport {
            get {
                return ResourceManager.GetString("sql_deleteAirport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM CHARTS WHERE ID = ?.
        /// </summary>
        internal static string sql_deleteChart {
            get {
                return ResourceManager.GetString("sql_deleteChart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PRAGMA auto_vacuum=FULL;VACUUM;.
        /// </summary>
        internal static string sql_enableVacuum {
            get {
                return ResourceManager.GetString("sql_enableVacuum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT CASE WHEN COUNT(*) &gt; 0 THEN TRUE ELSE FALSE END FROM AIRPORTS WHERE ICAO = ?.
        /// </summary>
        internal static string sql_readAirportExists {
            get {
                return ResourceManager.GetString("sql_readAirportExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * 
        ///FROM AIRPORTS.
        /// </summary>
        internal static string sql_readAllAirports {
            get {
                return ResourceManager.GetString("sql_readAllAirports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT CHARTS.*, LENGTH(PDF) AS PDFSIZE
        ///FROM CHARTS
        ///JOIN AIRPORTS ON Airport = AIRPORTS.ID
        ///WHERE ICAO = ?.
        /// </summary>
        internal static string sql_readAllChartsFromAirport {
            get {
                return ResourceManager.GetString("sql_readAllChartsFromAirport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT CASE WHEN COUNT(*) &gt; 0 THEN TRUE ELSE FALSE END FROM CHARTS WHERE ID = ?.
        /// </summary>
        internal static string sql_readChartExists {
            get {
                return ResourceManager.GetString("sql_readChartExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT last_insert_rowid() FROM AIRPORTS.
        /// </summary>
        internal static string sql_readLastRowIdAirport {
            get {
                return ResourceManager.GetString("sql_readLastRowIdAirport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT last_insert_rowid() FROM CHARTS.
        /// </summary>
        internal static string sql_readLastRowIdChart {
            get {
                return ResourceManager.GetString("sql_readLastRowIdChart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT PDF FROM CHARTS WHERE ID = ?.
        /// </summary>
        internal static string sql_readPdfFromChart {
            get {
                return ResourceManager.GetString("sql_readPdfFromChart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE AIRPORTS
        ///SET Name = ?
        ///WHERE ICAO = ?.
        /// </summary>
        internal static string sql_updateAirport {
            get {
                return ResourceManager.GetString("sql_updateAirport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE CHARTS
        ///SET Identifier = @identifier, Description = @description, Content = @content, Keywords = @keywords
        ///WHERE ID = @id.
        /// </summary>
        internal static string sql_updateChart {
            get {
                return ResourceManager.GetString("sql_updateChart", resourceCulture);
            }
        }
    }
}
